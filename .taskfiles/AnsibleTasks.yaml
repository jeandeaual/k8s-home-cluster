version: "3"

env:
  ANSIBLE_CONFIG: "{{.PROJECT_DIR}}/ansible.cfg"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/inventory"

tasks:

  init:
    desc: Install / Upgrade Ansible galaxy deps
    dir: provision/ansible
    cmds:
      - ansible-galaxy install -r requirements.yaml --roles-path ~/.ansible/roles --force
      - ansible-galaxy collection install -r requirements.yaml --collections-path ~/.ansible/collections --force

  list:
    desc: List all the hosts
    dir: provision/ansible
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml --list-hosts

  prepare:
    desc: Prepare all the k8s nodes for running k3s
    dir: provision/ansible
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-prepare.yaml

  install:
    desc: Install Kubernetes on the nodes
    dir: provision/ansible
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-installation.yaml

  nuke:
    desc: Uninstall Kubernetes on the nodes
    dir: provision/ansible
    interactive: true
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-nuke.yaml
      - task: reboot

  ping:
    desc: Ping all the hosts
    dir: provision/ansible
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    dir: provision/ansible
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml --one-line -a 'uptime'

  reboot:
    desc: Reboot all the k8s nodes
    dir: provision/ansible
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yaml

  shutdown:
    desc: Shutdown all the k8s nodes
    dir: provision/ansible
    cmds:
      - ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yaml -m community.general.shutdown --become
